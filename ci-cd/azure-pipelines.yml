pool:
  vmImage: 'Ubuntu 16.04'

variables:
  imageName: 'globaldigitalheritage/arches-3d:$(IMAGE_VERSION)'

steps:
- powershell: |
    if ("$env:BUILD_SOURCEBRANCHNAME" -eq "master") {
      Write-Host("##vso[task.setvariable variable=IMAGE_VERSION]$env:BUILD_BUILDNUMBER")
      Write-Host("##vso[task.setvariable variable=INCLUDE_LATEST]true")
    }
    elseif ("$env:BUILD_SOURCEBRANCHNAME" -eq "master-test") {
      Write-Host("##vso[task.setvariable variable=IMAGE_VERSION]$env:BUILD_BUILDNUMBER-test")
      Write-Host("##vso[task.setvariable variable=INCLUDE_LATEST]false")
    }
    else {
      # The special version part cannot exceed 20 characters, and cannot start with numbers
      $PreReleasePostFix = "$env:BUILD_SOURCEBRANCHNAME"
      if ($PreReleasePostFix.length -gt 20) {
          $PreReleasePostFix = $PreReleasePostFix.substring(0, 20)
      }
      Write-Host("##vso[task.setvariable variable=IMAGE_VERSION]$env:BUILD_BUILDNUMBER-$PreReleasePostFix")
      Write-Host("##vso[task.setvariable variable=INCLUDE_LATEST]false")
    }
  displayName: Resolve image version

- script: echo Image version [$(IMAGE_VERSION)]
  displayName: Print image version
  
- script: echo Include latest image tag [$(INCLUDE_LATEST)]
  displayName: Print include latest image tag

- task: Docker@2
  displayName: Login to Docker Hub
  inputs:
    command: login
    containerRegistry: hub.docker

- task: Docker@1
  displayName: Build image
  inputs:
    imageName: 'globaldigitalheritage/arches-3d:$(IMAGE_VERSION)'
    includeLatestTag: "$(includeLatest)"

- script: docker-compose -f docker-compose-azure-pipelines.yml run arches
  displayName: Run tests

- task: Docker@1
  displayName: Push image
  inputs:
    imageName: 'globaldigitalheritage/arches-3d:$(IMAGE_VERSION)'
    includeLatestTag: "$(includeLatest)"
    command: 'push'
